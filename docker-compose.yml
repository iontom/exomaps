version: '3'
# networks:
#      app_network:
#          driver: bridge
#          ipam:
#              config:
#                  - subnet: 10.5.0.0/16
services:
    web:
        build: src/
        ports:
            - "5000:5000"
        volumes:
            #- .:/code
#            - type: bind
#              source: ./
#              target: /code
            - .:/code
        env_file: .env
        depends_on:
            - redis
        environment:
            - PYTHONUNBUFFERED=0
        # command: ./docker-entrypoint.sh
        # network_mode: "host"
        # entrypoint: docker-entrypoint.sh
        
    redis:
        image: redis
        # network_mode: "host"

# version: '3'

# services:
#   web:
#     restart: always
#     build: ./web
#     expose:
#       - "8000"
#     links:
#       - postgres:postgres
#     volumes:
#       - web-data:/usr/src/app/static
#     env_file: 
#       - .env
#     command: /usr/local/bin/gunicorn -w 2 -b :8000 app:app

#   nginx:
#     restart: always
#     build: ./nginx
#     ports:
#       - "80:80"
#     volumes:
#       - .:/www/static
#       - web-data:/usr/src/app/static
#     links:
#       - web:web

#   data:
#     restart: always
#     image: postgres:12.1-alpine
#     # command: "true"
#     ports:
#       - "5432:5432"
#     network_mode: bridge
#     container_name: postgres

#     environment:
#       POSTGRES_USER: 'postgres'
#       POSTGRES_PASSWORD: 'pgpass'
#       POSTGRES_DB: 'postgrse'

#     volumes:
#       - db-data:/var/lib/postgresql/data

# volumes:
#   db-data:
#   web-data: